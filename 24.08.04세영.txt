TCP/IP (Transmission Control Protocol / Internet Protocol)

TCP(연결 지향형 프로토콜)
잘 받았는지 확인하지 않고 전송한다
순서대로 보내지 않지만 (이후에 OS에 kernel이 정리해준다)

랜선(이더넷)에서 IP로 보낼때 페킷 단위로 정보를 보내는데, TCP가 이것을 자르는 역할을 한다
패킷을 보낼때 순서대로 보내지 않는다. 이때 TCP가 순서도 체크해주고, 에러코드도 체크해준다
때문에 신뢰도가 높고, 속도가 UDP에 비해서 느리다

서버와 클라이언트가 연결되는 과정이 중요하다(3-way-hand-shake 3번의 악수)

호스트가 서버에게 SYN를 보내고, (전화를 걸어서 연결음이 간다)
서버가 호스트에게 SYN, ACK를 보내고, (여보세요? 잘 들려? 이런 응답)
호스트가 서버에게 ACK를 보낸다(잘 들린다는 대답을 한다)

이러한 연결을 하는것이고, 잘 받았는지 꼭 확인하게 되어있음.

UDP(비 연결지향형 프로토콜)
잘 받았는지 확인하지 않고 전송한다
순서대로 잘 보낸다


1. 자바스크립트의 Promise객체에 대해서 설명해보시오
자바스크립트는 비동기적으로 작동하는 인텉프리터 언어이기 때문에, 비동기 호출의 결과를 받을 수 있는 객체가 필요합니다.
자바스크립트에서 이러한 동작원리를 구현하기 위해 만들어진 객체가 바로 promise입니다. Promise객체내에 요청 성공시 실패시에 관련한
콜백 함수들을 세팅할수있기 때문에, 비동기 처리 후 결과를 받아내거나, 에러 핸들링을 하기에 적합합니다.

2. 리엑트 컴포넌트 설명주기에 대해서 설명해보시오
크게 4단계로 나눌 수 있고, 세밀하게 6단계로 나눌 수 있습니다. 간략하게 설명드리면 객체의 생명주기와 매우 비슷합니다.
리엑트 컴포넌트에 생성부터 삭제까지를 설명하는 것이며, ComponentDidMount, componentDidUpMount, ComponentMounted, ComponentUnMounted
객체가 생성되기 전, 객체가 생성한 후, 객체가 삭제되기 전, 객체가 삭제한 후를 컴포넌트 생명주기를 통해 관리할 수 있습니다.
보통 클래스형 컴포넌트에서는 이를 메서드로 제정의해서 사용하며, 함수형 컴포넌트 내에서는 훅을 이용하여 이러한 생명주기를 관리합니다.

3. HTML, CSS, JavaScript 관계에 대해서 설명하시오.
***** 사실 CSS, JavaScript 둘 다 HTML에 일부입니다. (<script></script> <style></style>)
CSS, JavaScript는 HTML과 별개의 것이 아닌 일부이고, HTML이 큰 나무질이라고 하면, css는 페인트칠, js는 전기라고 생각하면 된다

4. WebSocket의 작동 원리에 대해서 (좀 빡센곳 가면 물어볼 것임) 말해주세요.



** 포트폴리오 내에 내가 강조한것(질문 80%) 위주로 질문이 올 것임
예를들어 내가 이러한 라이브러리를 썼는데, 쓸 수 박에 없던 이유, 썼을 때 트러블슈팅(에러가 났을때 그걸 어떻게 고쳤는지)
ex) 대소문자 구분(꼼꼼함을 보여줄 수 있음)

- 거래소(가상으로 코인이나 주식거래!!!) 만들어보기
- 개발블로그 직접만드는거 깃에 올리기
- 지도 API같은거 연동해서, 부동산 견적 보는 사이트 만들어보기
- 아사나 클론코딩(협업툴 같은거 클론코딩 매우 좋다)
- 인테리어 중개 플랫폼(이런거 아주 좋음 AI연동)
- Git 명령어 총 집합(이거 잘 쓰면 존나 좋아함 >> 강의해줄 예정 >> 나 깃 잘쓴다 >> 협업 잘되는구나 개좋아함)


화요일까지 플젝 뭐할지 정하고 git수업하기